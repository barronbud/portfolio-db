// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model oms_Customer {
  id        Int         @id @default(autoincrement())
  email     String      @unique
  firstName String
  lastName  String
  password  String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  orders    oms_Order[]
}

model oms_Product {
  id          Int             @id @default(autoincrement())
  name        String
  description String
  price       Decimal
  stock       Int
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  orderItems  oms_OrderItem[]
}

model oms_Order {
  id         Int             @id @default(autoincrement())
  customerId Int
  customer   oms_Customer  @relation(fields: [customerId], references: [id])
  status     String
  total      Decimal
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
  orderItems oms_OrderItem[]
}

model oms_OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  order     oms_Order    @relation(fields: [orderId], references: [id])
  productId Int
  product   oms_Product  @relation(fields: [productId], references: [id])
  quantity  Int
  price     Decimal
}
